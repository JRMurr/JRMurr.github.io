{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var r=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var c=a=>i(a,\"__esModule\",{value:!0});var m=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),k=(a,s)=>{c(a);for(var l in s)i(a,l,{get:s[l],enumerable:!0})},N=(a,s,l)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let e of p(s))!u.call(a,e)&&e!==\"default\"&&i(a,e,{get:()=>s[e],enumerable:!(l=d(s,e))||l.enumerable});return a},g=a=>N(c(i(a!=null?r(h(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var o=m((b,t)=>{t.exports=_jsx_runtime});var w={};k(w,{default:()=>y,frontmatter:()=>x});var n=g(o()),x={title:\"Rust Environment and Docker Build with Nix Flakes\",date:\"2022-05-17\",tags:[\"rust\",\"nix\",\"docker\"],draft:!0,summary:\"Reproducible dev environments and build with nix\",images:[],layout:\"PostLayout\"};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(l,{})})):l();function l(){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\",code:\"code\",pre:\"pre\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h2,{id:\"why-nix\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#why-nix\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Why Nix\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`Getting a dev environment setup with rust is usually pretty simple, just use rustup then you're good to go.\nUsing a build tool like `,(0,n.jsx)(e.a,{href:\"https://nixos.org/\",children:\"nix\"}),\" can buy you much more for not much extra work. Nix lets you\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Specify non rust project dependencies in code\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Automatically add all your projects tools/dependencies to your path with \",(0,n.jsx)(e.a,{href:\"https://direnv.net/\",children:\"direnv\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"Easily build slim docker containers\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:`Once you start working in a repo with nix you never want to go back.\nNo more READMEs with a list of Homebrew, apt, pacman, etc. commands you need to run.\nBuilding slim docker containers is a breeze without needing to manually handle multiple layers to copy build artifacts from.`}),`\n`,(0,n.jsxs)(e.h2,{id:\"the-dev-environment\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#the-dev-environment\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"The Dev environment\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We will use \",(0,n.jsx)(e.a,{href:\"https://nixos.wiki/wiki/Flakes\",children:\"nix flakes\"}),` to setup nix for our project.\nFlakes are nix's newish way to make nix builds more reproudible by adding a lock file concept to the project.\nEach flake can have `,(0,n.jsx)(e.code,{children:\"inputs\"}),\" which are other flakes/nix files and many \",(0,n.jsx)(e.a,{href:\"https://nixos.wiki/wiki/Flakes#Output_schema\",children:\"outputs\"}),`.\nOne thing to note, all files referenced in your flake (including itself) must be added to git.\nIf you run into any file not found errors make sure you `,(0,n.jsx)(e.code,{children:\"git add\"}),\" everything you need.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"To get started in the root of your project run\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-sh code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`nix flake init\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This will give you a \",(0,n.jsx)(e.code,{children:\"flake.nix\"}),\" file that looks like\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-nix\",children:(0,n.jsxs)(e.code,{className:\"language-nix code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"A very basic flake\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  outputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" self\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" nixpkgs \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    packages\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x86_64\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"linux\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" nixpkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"legacyPackages\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x86_64\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"linux\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    defaultPackage\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x86_64\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"linux \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" self\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"packages\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"x86_64\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"linux\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This starter flake will build a hello world binary with \",(0,n.jsx)(e.code,{children:\"nix build .#hello\"}),\" which calls the first line or with just \",(0,n.jsx)(e.code,{children:\"nix build\"}),\" to call the \",(0,n.jsx)(e.code,{children:\"defaultPackage\"}),` line.\nThe downside is this only builds the package on x86/64 linux, lets add some inputs to generalize this to more systems.`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-nix\",children:(0,n.jsxs)(e.code,{className:\"language-nix code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  inputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    nixpkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"url \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"github:nixos/nixpkgs/nixos-unstable\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"url \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"github:numtide/flake-utils\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  outputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" self\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" nixpkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"lib\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"eachDefaultSystem \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"system\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"let\"}),\" pkgs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"import\"}),\" nixpkgs \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"inherit\"}),\" system\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        packages\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" pkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        defaultPackage \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" pkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"hello\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"We added two inputs, the first is \",(0,n.jsx)(e.code,{children:\"nixpkgs\"}),` which lets us specify which version of nixpkgs we should use.\nThere are many `,(0,n.jsx)(e.a,{href:\"https://search.nixos.org/packages\",children:\"thousands of packages\"}),` in the nixpkg repository and they are updated often so here will use the unstable branch.\nWe also added `,(0,n.jsx)(e.a,{href:\"https://github.com/numtide/flake-utils\",children:\"flake-utils\"}),\" which helps us generalize the flake to support multiple systems, not just linux.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now on linux and mac the hello package will build. Now run \",(0,n.jsx)(e.code,{children:\"nix build\"}),\", you should see a \",(0,n.jsx)(e.code,{children:\"result\"}),\" folder which contains the \",(0,n.jsx)(e.code,{children:\"hello\"}),` package,\nyou can run it with `,(0,n.jsx)(e.code,{children:\"./result/bin/hello\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"rust-in-nix\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#rust-in-nix\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Rust in nix\"]}),`\n`,(0,n.jsx)(e.p,{children:'To move on from \"hello world\" to rust lets add another input'}),`\n`,(0,n.jsx)(e.pre,{className:\"language-nix\",children:(0,n.jsxs)(e.code,{className:\"language-nix code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"inputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    nixpkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"url \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"github:nixos/nixpkgs/nixos-unstable\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"url \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"github:numtide/flake-utils\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    rust\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"overlay\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"url \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"github:oxalica/rust-overlay\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  outputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" self\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" nixpkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" rust\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"overlay\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    flake\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"utils\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"lib\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"eachDefaultSystem \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"system\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"let\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        overlays \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"import\"}),\" rust\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"overlay\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        pkgs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"import\"}),\" nixpkgs \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"inherit\"}),\" system overlays\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        rustVersion \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" pkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"rust\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\"bin\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"stable\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"latest\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"default\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" devShell \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" pkgs\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"mkShell \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" buildInputs \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\" rustVersion \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now we added \",(0,n.jsx)(e.a,{href:\"https://github.com/oxalica/rust-overlay\",children:\"rust-overlay\"}),` so we can easily specify different rust versions\nwithout relying on `,(0,n.jsx)(e.code,{children:\"nixpkgs\"}),\" to give us what ever rust version in there.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"We also switched the \",(0,n.jsx)(e.code,{children:\"outyputs\"}),\" to only have \",(0,n.jsx)(e.code,{children:\"devShell\"}),\". Now when you run \",(0,n.jsx)(e.code,{children:\"nix develop\"}),\" you will get a new sandboxed shell with the stable rust version.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`If you want to use a specific version/nightly build you can use\n`,(0,n.jsx)(e.code,{children:\"rustVersion = (pkgs.rust-bin.fromRustupToolchainFile ./rust-toolchain.toml);\"}),\" to read a rust toolchain file and use the version specificed in there.\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"automatically-load-the-nix-environment\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#automatically-load-the-nix-environment\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Automatically load the nix environment\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now that we have the rust version we want lets make the \",(0,n.jsx)(e.code,{children:\"nix develop\"}),\" step automatic.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Install \",(0,n.jsx)(e.a,{href:\"https://direnv.net/\",children:\"direnv\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://github.com/nix-community/nix-direnv\",children:\"nix-direnv\"}),`.\nThe second is optional but helps with chaching so I reccomend it.`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Direnv will add hooks to your shell so when you cd into your project it will auto load the nix enviorment for you without needing to run \",(0,n.jsx)(e.code,{children:\"nix develop\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"In the root of your project run\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsxs)(e.code,{className:\"language-sh code-highlight\",children:[(0,n.jsx)(e.span,{className:\"code-line\",children:`echo \"use flake\" >> .envrc\n`}),(0,n.jsx)(e.span,{className:\"code-line\",children:`direnv allow\n`})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\".envrc\"}),\" file will be loaded by direnv and it will use the flake's \",(0,n.jsx)(e.code,{children:\"devShell\"}),` output to setup your enviorment.\nOn changes to your flake direnv will reload only what has changed.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"making-docker-containers\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#making-docker-containers\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Making docker containers\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Now that nix knows about our rust version we can use nix to build our rust project and make a slim container with it\"}),`\n`,(0,n.jsx)(e.p,{children:\"TODO:......\"})]})}}var y=f;return w;})();\n;return Component;","toc":[{"value":"Why Nix","url":"#why-nix","depth":2},{"value":"The Dev environment","url":"#the-dev-environment","depth":2},{"value":"Rust in nix","url":"#rust-in-nix","depth":2},{"value":"Automatically load the nix environment","url":"#automatically-load-the-nix-environment","depth":2},{"value":"Making docker containers","url":"#making-docker-containers","depth":2}],"frontMatter":{"readingTime":{"text":"5 min read","minutes":4.785,"time":287100,"words":957},"slug":"rust-enviorment-and-docker-build-with-nix-flakes","fileName":"rust-enviorment-and-docker-build-with-nix-flakes.mdx","title":"Rust Environment and Docker Build with Nix Flakes","date":"2022-05-17T00:00:00.000Z","tags":["rust","nix","docker"],"draft":true,"summary":"Reproducible dev environments and build with nix","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.215,"time":12900,"words":43},"slug":["default"],"fileName":"default.md","name":"John Murray","avatar":"/static/images/me.jpg","occupation":"Software Engineer","github":"https://github.com/JRMurr","date":null}],"prev":{"title":"Intermediate Typescript: Generics and Mapped Types","date":"2022-01-31T00:00:00.000Z","tags":["Typescript","code","types","guide"],"draft":false,"summary":"Useful applications of generics and mapped types","images":[],"layout":"PostLayout","slug":"intermediate-typescript-generics-and-mapped-types"},"next":null},"__N_SSG":true}