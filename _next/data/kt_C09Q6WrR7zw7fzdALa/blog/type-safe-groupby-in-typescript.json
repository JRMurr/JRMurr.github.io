{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var o=a=>l(a,\"__esModule\",{value:!0});var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),k=(a,s)=>{o(a);for(var c in s)l(a,c,{get:s[c],enumerable:!0})},y=(a,s,c)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let e of h(s))!u.call(a,e)&&e!==\"default\"&&l(a,e,{get:()=>s[e],enumerable:!(c=d(s,e))||c.enumerable});return a},g=a=>y(o(l(a!=null?p(m(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var r=N((K,i)=>{i.exports=_jsx_runtime});var v={};k(v,{default:()=>b,frontmatter:()=>f});var n=g(r()),f={title:\"Type Safe GroupBy In TypeScript\",date:\"2022-05-25\",tags:[\"typescript\",\"types\",\"code\",\"guide\"],draft:!1,summary:\"Create a better groupBy function that only allows valid keys to be grouped on\",images:[],layout:\"PostLayout\"};function w(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(c,{})})):c();function c(){let e=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",pre:\"pre\",code:\"code\",em:\"em\"},a.components),{TOCInline:t}=e;return t||T(\"TOCInline\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t,{toc:a.toc,asDisclosure:!0}),`\n`,(0,n.jsxs)(e.h2,{id:\"lodashs-groupby\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#lodashs-groupby\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Lodash's groupBy\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I would bet if you have a sizeable Javascript/Typescript codebase you most likely are using \",(0,n.jsx)(e.a,{href:\"https://lodash.com/\",children:\"lodash\"}),` somewhere in there.\nWhile Javascript has gotten more \"batteries included\" over the last few years, lodash still has many nice functions for manipulating arrays/objects.\nOne such function is `,(0,n.jsx)(e.a,{href:\"https://lodash.com/docs/4.17.15#groupBy\",children:\"groupBy\"}),\". It groups a list by some predicate, in the simplest case it can just be a key in the objects of the array.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),\" _ \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'lodash'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"interface\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Foo\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  num\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  someLiteral\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'a'\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"|\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'b'\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"|\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'c'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" vals\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Foo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" num\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"1\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" someLiteral\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'a'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'value'\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" num\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" someLiteral\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'a'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'diffValue'\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" num\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"1\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" someLiteral\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'b'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"dir\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"_\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'num'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  '1': [ { num: 1, someLiteral: 'a' }, { num: 1, someLiteral: 'b' } ],\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  '2': [ { num: 2, someLiteral: 'a' } ]\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"dir\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"_\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'someLiteral'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  a:[\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`      { num: 1, someLiteral: 'a', object: [Object] },\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`      { num: 2, someLiteral: 'a', object: [Object] }\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  ],\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  b: [ { num: 1, someLiteral: 'b', object: {} } ]\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"This all seems to make sense, you can set what key you want to group on, and you get back an object whose keys are the values for found in the input array of objects.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now if you're in a TypeScript code base I hope you are using the \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/@types/lodash\",children:\"definitely typed lodash types\"}),` to add some types to the lodash functions.\nIn this case the `,(0,n.jsx)(e.code,{children:\"_.groupBy\"}),\" type looks roughly like (simplified from the actual code)\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"declare\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsxs)(e.span,{className:\"token generic-function\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsxs)(e.span,{className:\"token generic class-name\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"collection\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" List\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Dictionary\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"interface\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"Dictionary\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"index\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"So a few things stick out here. First, the \",(0,n.jsx)(e.code,{children:\"key\"}),\" type is just string, so there's nothing stopping me from doing \",(0,n.jsx)(e.code,{children:'_.groupBy(vals, \"someKeyThatDoesNotExist\")'}),`.\nSecond, we have no restrictions at the type level of me grouping on a key whose value is not a valid object key (the value must be a subset of `,(0,n.jsx)(e.code,{children:\"string | number | symbol\"}),\"). For example in \",(0,n.jsx)(e.code,{children:\"Foo\"}),\" the \",(0,n.jsx)(e.code,{children:\"object\"}),\" key's value was a record. Here's what happens when you try to group on that key.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"dir\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"_\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'object'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  '[object Object]': [\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`    { num: 1, someLiteral: 'a', object: [Object] },\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`    { num: 2, someLiteral: 'a', object: [Object] },\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`    { num: 1, someLiteral: 'b', object: {} }\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  ]\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this case the objects where coerced to string values so all elements of \",(0,n.jsx)(e.code,{children:\"vals\"}),\" where grouped under the same weird \",(0,n.jsx)(e.code,{children:\"[object Object]\"}),\" key. While this does not throw an error there is almost 0 chance you want this to happen in your code.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Finally, the return type of this function is \",(0,n.jsx)(e.code,{children:\"Dictionary\"}),`, while its \"right\" it could be \"more right\" by encoding that the returning object's keys would be the values of the grouping key in the input object.`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"making-our-own-groupby\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#making-our-own-groupby\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Making our own groupBy\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:\"insert Bender joke here\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"To start making our own type safe \",(0,n.jsx)(e.code,{children:\"groupBy\"}),\", we first need some code that actually does the grouping logic. Let's start with that and some basic types.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// Note: PropertyKey is a builtIn type alias of\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// type PropertyKey = string | number | symbol\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'// This lets us use \"Record<PropertyKey, any>\" to represent any object'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'// but is slightly nicer to use than the \"object\" type'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token class-name\",children:(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"})}),\" \",(0,n.jsxs)(e.span,{className:\"token generic-function\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"simpleGroupBy\"}),(0,n.jsxs)(e.span,{className:\"token generic class-name\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"PropertyKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">>\"})]})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"arr\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" arr\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"reduce\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" groupedKey \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"push\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"console\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"dir\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"simpleGroupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'num'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  '1': [\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`    { num: 1, someLiteral: 'a', object: [Object] },\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`    { num: 1, someLiteral: 'b', object: {} }\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  ],\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  '2': [ { num: 2, someLiteral: 'a', object: [Object] } ]\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Cool the logic here seems to work, but obviously the types could use some love.\"}),`\n`,(0,n.jsxs)(e.p,{children:[`Let's start by adding a few more generics, so we can type the output correctly.\nYour first change might be to make the return type `,(0,n.jsx)(e.code,{children:\"Record<string, T[]>\"}),` since the keys will be coerced to strings by JavaScript and the values will be the same values in the array.\nThis will unfortunately make typescript sad.`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsxs)(e.span,{className:\"token generic-function\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"sadAttempt\"}),(0,n.jsxs)(e.span,{className:\"token generic class-name\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"arr\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" arr\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"reduce\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" groupedKey \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[\"      accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"push\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The lines with \",(0,n.jsx)(e.code,{children:\"accumulator[groupedKey]\"}),\" will error with \",(0,n.jsx)(e.code,{children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T>'\"}),\". Here the \",(0,n.jsx)(e.code,{children:\"keyof T\"}),\" could be any key in \",(0,n.jsx)(e.code,{children:\"T\"}),\" so since not every key's value in \",(0,n.jsx)(e.code,{children:\"T\"}),\" is a string typescript will not let you treat \",(0,n.jsx)(e.code,{children:\"groupedKey\"}),\" as a string.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"We can almost fix this by adding some more information on the input key by binding it to a new generic parameter, though there will still be some issues.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsxs)(e.span,{className:\"token generic-function\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"betterSadAttempt\"}),(0,n.jsxs)(e.span,{className:\"token generic class-name\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"PropertyKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" Key \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  arr\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),` Key\n`]}),(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"Key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" arr\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"reduce\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" groupedKey \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"push\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line highlight-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"Key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Here we added a new generic \",(0,n.jsx)(e.code,{children:\"Key extends keyof T\"}),\" so when we supply a specific key to the function, the Key generic will be narrowed to that value. For example if we did \",(0,n.jsx)(e.code,{children:\"betterSadAttempt(vals, 'someLiteral')\"}),\", \",(0,n.jsx)(e.code,{children:\"Key\"}),\" would exactly be \",(0,n.jsx)(e.code,{children:\"'someLiteral'\"}),\" instead of \",(0,n.jsx)(e.code,{children:\"keyof Foo = 'someLiteral' | 'num' | 'object'\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"However, typescript is still sad on the \",(0,n.jsx)(e.code,{children:\"Record<T[Key], T[]>\"}),\" lines with \",(0,n.jsx)(e.code,{children:\"Type 'T[Key]' does not satisfy the constraint 'string | number | symbol'\"}),`.\nThis error is similar to the error before, basically `,(0,n.jsx)(e.code,{children:\"T[Key]\"}),\" can not be a key for the \",(0,n.jsx)(e.code,{children:\"Record\"}),\" since it could be some weird value.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To accomplish this we need to make a helper type that filters down the allowed keys to only keys whose values are \",(0,n.jsx)(e.code,{children:\"string | number | symbol\"}),`.\nWe can use a `,(0,n.jsx)(e.a,{href:\"https://www.typescriptlang.org/docs/handbook/2/mapped-types.html\",children:\"mapped type\"}),\" to do just that\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"PropertyKey\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"?\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"never\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This type helper does a few things. First it maps over all the values in \",(0,n.jsx)(e.code,{children:\"T\"}),\" (\",(0,n.jsx)(e.code,{children:\"[K in keyof T]\"}),\") and makes the value the key if it is a subset of \",(0,n.jsx)(e.code,{children:\"string | number | symbol\"}),\" (\",(0,n.jsx)(e.code,{children:\"T[K] extends PropertyKey ? K\"}),\"), if it's not a subset its value will bethe \",(0,n.jsx)(e.code,{children:\"never\"}),\" type. Finally, we use an \",(0,n.jsx)(e.a,{href:\"https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html\",children:\"index access type\"}),\" to get all values of the transformed object as a union. This step will drop all the \",(0,n.jsx)(e.code,{children:\"never\"}),\" values automatically for us since adding \",(0,n.jsx)(e.code,{children:\"never\"}),\" to a union is like saying \",(0,n.jsx)(e.code,{children:\"or false\"}),\" its basically is a no op.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"That was a mouthful so let's see an example\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// from above\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"interface\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"Foo\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  num\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  someLiteral\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'a'\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"|\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'b'\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"|\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'c'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"MappedFoo\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"Foo\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  num: \"num\";\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  someLiteral: \"someLiteral\";\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  object: never;\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// we replace the values of this object with just the key as a string literal or never\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"FooKeys\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"Foo\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'// => \"num\" | \"someLiteral\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// notice the never does not show up in the union\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"interface\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"AllObjects\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  object\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"string\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  diffObject\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"MappedAllObjects\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"AllObjects\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`/*\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`{ \n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  object: never;\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`  diffObject: never;\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token comment\",children:`}\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"*/\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"AllObjectsKeys\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"AllObjects\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// => never\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'// the output is only never. Think of this like saying \"false or false\", the output will just be false'}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"With this filter type helper function we can now properly limit the \",(0,n.jsx)(e.code,{children:\"Key\"}),\" generic by replacing \",(0,n.jsx)(e.code,{children:\"Key extends keyof T\"}),\" with \",(0,n.jsx)(e.code,{children:\"Key extends Filter<T>\"}),\".\"]}),`\n`,(0,n.jsxs)(e.h2,{id:\"putting-it-all-together\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#putting-it-all-together\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Putting it all together\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"PropertyKey\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"?\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"K\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"never\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsxs)(e.span,{className:\"token generic-function\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsxs)(e.span,{className:\"token generic class-name\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"PropertyKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"any\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" Key \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">>\"})]})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  arr\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),` Key\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"Key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" arr\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"reduce\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" groupedKey \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"push\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"Key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" nums \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'num'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// nums = Record<number, Foo[]>\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" literals \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'someLiteral'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:'// literals = Record<\"a\" | \"b\" | \"c\", Foo[]>'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" sad \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'object'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:`// error: Argument of type '\"object\"' is not assignable to parameter of type 'Filter<Foo>'`}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[`Now this works great, we can only pass in keys that have valid values, and we even get autocomplete on it! However, one thing that bothers me is the error message in the last case.\nWhile it's correct, saying `,(0,n.jsx)(e.code,{children:\"not assignable to parameter of type 'Filter<Foo>'\"}),\" is not very useful to a user. This pops up sometimes with typescript where it won't show the underlying type and instead just show the higher level type helper instead.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"To make the error message show the valid keys we can use a modified version of \",(0,n.jsx)(e.a,{href:\"https://stackoverflow.com/a/57683652\",children:'this \"hack\"'}),\". Here instead of creating the \",(0,n.jsx)(e.code,{children:\"Expand\"}),\" type in the post, we can make our own \",(0,n.jsx)(e.code,{children:\"ValuesOf\"}),\" to replace the \",(0,n.jsx)(e.code,{children:\"[keyof T]\"}),\" at the end of \",(0,n.jsx)(e.code,{children:\"Filter\"})]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"ValuesOf\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"A\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"A\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:(0,n.jsx)(e.span,{className:\"token keyword\",children:\"infer\"})}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"O\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"?\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"A\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"keyof\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"A\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"never\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"type\"}),\" \",(0,n.jsxs)(e.span,{className:\"token class-name\",children:[\"Filter\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" ValuesOf\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"MapValuesToKeysIfAllowed\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">>\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// was Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" sad \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"vals\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'object'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:`// error: Argument of type '\"object\"' is not assignable to parameter of type '\"num\" | \"someLiteral\"'`}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Now we have type safety and good error messages!\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"possible-improvements\",children:[(0,n.jsx)(e.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#possible-improvements\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Possible improvements\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"One thing this \",(0,n.jsx)(e.code,{children:\"groupBy\"}),\" function lacks that the lodash \",(0,n.jsx)(e.code,{children:\"groupBy\"}),` gives is we do not allow you to pass a function instead of a key to group on.\nThe example in the lodash docs is`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"_\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"groupBy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"6.1\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"4.2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"6.3\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" Math\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"floor\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// { '4': [4.2], '6': [6.1, 6.3] }\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"While this is not perfect this mostly works\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-typescript\",children:(0,n.jsxs)(e.code,{className:\"language-typescript code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" groupByFunc\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  RetType \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"PropertyKey\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"// no longer need any requirements on T since the grouper can do w/e it wants\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  Func \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"extends\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"arg\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),` RetType\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"arr\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" mapper\",(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Func\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"RetType\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" arr\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"reduce\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=>\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" groupedKey \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"mapper\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"groupedKey\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token function\",children:\"push\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"val\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" accumulator\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" Record\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"RetType\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token constant\",children:\"T\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" test \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"groupByFunc\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"6.1\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"4.2\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"6.3\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" Math\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"floor\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"// test = Record<PropertyKey, Foo[]>\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This works by only letting you pass in functions that return \",(0,n.jsx)(e.code,{children:\"PropertyKey\"}),\", but typescript does not seem to narrow the types. In this case \",(0,n.jsx)(e.code,{children:\"test\"}),\" should be \",(0,n.jsx)(e.code,{children:\"Record<number, Foo[]>\"}),\" since TS \",(0,n.jsx)(e.em,{children:\"should\"}),\" infer the return type of the grouping function. If you know how to improve this function to make the return type narrow properly feel free to leave an issue/pr on my \",(0,n.jsx)(e.a,{href:\"https://github.com/JRMurr/JRMurr.github.io\",children:\"blog's GitHub\"}),\"!\"]})]})}}var b=w;function T(a,s){throw new Error(\"Expected \"+(s?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v;})();\n;return Component;","toc":[{"value":"Lodash's groupBy","url":"#lodashs-groupby","depth":2},{"value":"Making our own groupBy","url":"#making-our-own-groupby","depth":2},{"value":"Putting it all together","url":"#putting-it-all-together","depth":2},{"value":"Possible improvements","url":"#possible-improvements","depth":2}],"frontMatter":{"readingTime":{"text":"14 min read","minutes":14,"time":840000,"words":2800},"slug":"type-safe-groupby-in-typescript","fileName":"type-safe-groupby-in-typescript.md","title":"Type Safe GroupBy In TypeScript","date":"2022-05-25T00:00:00.000Z","tags":["typescript","types","code","guide"],"draft":false,"summary":"Create a better groupBy function that only allows valid keys to be grouped on","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.215,"time":12900,"words":43},"slug":["default"],"fileName":"default.md","name":"John Murray","avatar":"/static/images/me.jpg","occupation":"Software Engineer","github":"https://github.com/JRMurr","date":null}],"prev":{"title":"Rust Environment and Docker Build with Nix Flakes","date":"2022-05-19T00:00:00.000Z","tags":["rust","nix","docker"],"draft":false,"summary":"Reproducible dev environments and builds with Nix","images":[],"layout":"PostLayout","slug":"rust-enviorment-and-docker-build-with-nix-flakes"},"next":null},"__N_SSG":true}