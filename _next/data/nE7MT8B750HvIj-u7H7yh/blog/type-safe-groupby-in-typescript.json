{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var i=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var a=r=>c(r,\"__esModule\",{value:!0});var m=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),u=(r,n)=>{a(r);for(var s in n)c(r,s,{get:n[s],enumerable:!0})},T=(r,n,s)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of F(n))!h.call(r,l)&&l!==\"default\"&&c(r,l,{get:()=>n[l],enumerable:!(s=p(n,l))||s.enumerable});return r},v=r=>T(a(c(r!=null?i(y(r)):{},\"default\",r&&r.__esModule&&\"default\"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var d=m((R,t)=>{t.exports=_jsx_runtime});var f={};u(f,{default:()=>b,frontmatter:()=>K});var e=v(d()),K={title:\"Type Safe GroupBy In TypeScript\",date:\"2022-05-25\",tags:[\"typescript\",\"types\",\"code\",\"guide\"],draft:!1,summary:\"Create a better groupBy function that only allows valid keys to be grouped on\",images:[],layout:\"PostLayout\"};function g(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(s,{})})):s();function s(){let l=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",pre:\"pre\",div:\"div\",code:\"code\",\"data-lsp\":\"data-lsp\",em:\"em\",\"data-err\":\"data-err\"},r.components),{TOCInline:o}=l;return o||C(\"TOCInline\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(o,{toc:r.toc,asDisclosure:!0}),`\n`,(0,e.jsxs)(l.h2,{id:\"lodashs-groupby\",children:[(0,e.jsx)(l.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#lodashs-groupby\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Lodash's groupBy\"]}),`\n`,(0,e.jsxs)(l.p,{children:[\"I would bet if you have a sizeable Javascript/Typescript codebase you most likely are using \",(0,e.jsx)(l.a,{href:\"https://lodash.com/\",children:\"lodash\"}),` somewhere in there.\nWhile Javascript has gotten more \"batteries included\" over the last few years, lodash still has many nice functions for manipulating arrays/objects.\nOne such function is `,(0,e.jsx)(l.a,{href:\"https://lodash.com/docs/4.17.15#groupBy\",children:\"groupBy\"}),\". It groups a list by some predicate, in the simplest case it can just be a key in the objects of the array.\"]}),`\n\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"import\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:`(alias) namespace _\n(alias) const _: import(\"/home/runner/work/JRMurr.github.io/JRMurr.github.io/node_modules/@types/lodash/index.d.ts\").LoDashStatic\nimport _`,children:\"_\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"from\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"lodash\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Foo\",children:\"Foo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.num: number\",children:\"num\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"number\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'(property) Foo.someLiteral: \"a\" | \"b\" | \"c\"',children:\"someLiteral\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"a\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"|\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"b\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"|\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"c\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Foo\",children:\"Foo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[] \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  { \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.num: number\",children:\"num\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"1\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'(property) Foo.someLiteral: \"a\" | \"b\" | \"c\"',children:\"someLiteral\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"a\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" { \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) key: string\",children:\"key\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"value\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" } },\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  { \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.num: number\",children:\"num\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"2\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'(property) Foo.someLiteral: \"a\" | \"b\" | \"c\"',children:\"someLiteral\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"a\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" { \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) key: string\",children:\"key\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"diffValue\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" } },\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  { \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.num: number\",children:\"num\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"1\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'(property) Foo.someLiteral: \"a\" | \"b\" | \"c\"',children:\"someLiteral\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"b\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\", \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {} },\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"];\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var console: Console\",children:\"console\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Console.dir(item?: any, options?: any): void\",children:\"dir\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:`(alias) namespace _\n(alias) const _: import(\"/home/runner/work/JRMurr.github.io/JRMurr.github.io/node_modules/@types/lodash/index.d.ts\").LoDashStatic\nimport _`,children:\"_\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) LoDashStatic.groupBy<Foo>(collection: _.List<Foo> | null | undefined, iteratee?: _.ValueIteratee<Foo> | undefined): _.Dictionary<Foo[]> (+1 overload)\",children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"num\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"));\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  '1': [ { num: 1, someLiteral: 'a' }, { num: 1, someLiteral: 'b' } ],\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  '2': [ { num: 2, someLiteral: 'a' } ]\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var console: Console\",children:\"console\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Console.dir(item?: any, options?: any): void\",children:\"dir\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:`(alias) namespace _\n(alias) const _: import(\"/home/runner/work/JRMurr.github.io/JRMurr.github.io/node_modules/@types/lodash/index.d.ts\").LoDashStatic\nimport _`,children:\"_\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) LoDashStatic.groupBy<Foo>(collection: _.List<Foo> | null | undefined, iteratee?: _.ValueIteratee<Foo> | undefined): _.Dictionary<Foo[]> (+1 overload)\",children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"someLiteral\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"));\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  a:[\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"      { num: 1, someLiteral: 'a', object: [Object] },\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"      { num: 2, someLiteral: 'a', object: [Object] }\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  ],\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  b: [ { num: 1, someLiteral: 'b', object: {} } ]\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})})]})})]}),`\n`,(0,e.jsx)(l.p,{children:\"This all seems to make sense, you can set what key you want to group on, and you get back an object whose keys are the values for found in the input array of objects.\"}),`\n`,(0,e.jsxs)(l.p,{children:[\"Now if you're in a TypeScript code base I hope you are using the \",(0,e.jsx)(l.a,{href:\"https://www.npmjs.com/package/@types/lodash\",children:\"definitely typed lodash types\"}),` to add some types to the lodash functions.\nIn this case the `,(0,e.jsx)(l.code,{children:\"_.groupBy\"}),\" type looks roughly like (simplified from the actual code)\"]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"declare\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function groupBy<T>(collection: Array<T>, key: string): Dictionary<T[]>\",children:\"groupBy\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T>(collection: T[], key: string): Dictionary<T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">(\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) collection: T[]\",children:\"collection\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Array<T>\",children:\"Array\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T>(collection: T[], key: string): Dictionary<T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">, \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: string\",children:\"key\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Dictionary<T>\",children:\"Dictionary\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T>(collection: T[], key: string): Dictionary<T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]>;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Dictionary<T>\",children:\"Dictionary\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in Dictionary<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  [\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) index: string\",children:\"index\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"]\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in Dictionary<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"So a few things stick out here. First, the \",(0,e.jsx)(l.code,{children:\"key\"}),\" type is just string, so there's nothing stopping me from doing \",(0,e.jsx)(l.code,{children:'_.groupBy(vals, \"someKeyThatDoesNotExist\")'}),`.\nSecond, we have no restrictions at the type level of me grouping on a key whose value is not a valid object key (the value must be a subset of `,(0,e.jsx)(l.code,{children:\"string | number | symbol\"}),\"). For example in \",(0,e.jsx)(l.code,{children:\"Foo\"}),\" the \",(0,e.jsx)(l.code,{children:\"object\"}),\" key's value was a record. Here's what happens when you try to group on that key.\"]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var console: Console\",children:\"console\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Console.dir(item?: any, options?: any): void\",children:\"dir\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:`(alias) namespace _\n(alias) const _: import(\"/home/runner/work/JRMurr.github.io/JRMurr.github.io/node_modules/@types/lodash/index.d.ts\").LoDashStatic\nimport _`,children:\"_\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) LoDashStatic.groupBy<Foo>(collection: _.List<Foo> | null | undefined, iteratee?: _.ValueIteratee<Foo> | undefined): _.Dictionary<Foo[]> (+1 overload)\",children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"object\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"));\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  '[object Object]': [\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"    { num: 1, someLiteral: 'a', object: [Object] },\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"    { num: 2, someLiteral: 'a', object: [Object] },\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"    { num: 1, someLiteral: 'b', object: {} }\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  ]\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"In this case the objects where coerced to string values so all elements of \",(0,e.jsx)(l.code,{children:\"vals\"}),\" where grouped under the same weird \",(0,e.jsx)(l.code,{children:\"[object Object]\"}),\" key. While this does not throw an error there is almost 0 chance you want this to happen in your code.\"]}),`\n`,(0,e.jsxs)(l.p,{children:[\"Finally, the return type of this function is \",(0,e.jsx)(l.code,{children:\"Dictionary\"}),`, while its \"right\" it could be \"more right\" by encoding that the returning object's keys would be the values of the grouping key in the input object.`]}),`\n`,(0,e.jsxs)(l.h2,{id:\"making-our-own-groupby\",children:[(0,e.jsx)(l.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#making-our-own-groupby\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Making our own groupBy\"]}),`\n`,(0,e.jsx)(l.p,{children:(0,e.jsx)(l.em,{children:\"insert Bender joke here\"})}),`\n`,(0,e.jsxs)(l.p,{children:[\"To start making our own type safe \",(0,e.jsx)(l.code,{children:\"groupBy\"}),\", we first need some code that actually does the grouping logic. Let's start with that and some basic types.\"]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// Note: PropertyKey is a builtIn type alias of\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// type PropertyKey = string | number | symbol\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'// This lets us use \"Record<PropertyKey, any>\" to represent any object'})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'// but is slightly nicer to use than the \"object\" type'})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function simpleGroupBy<T extends Record<PropertyKey, any>>(arr: T[], key: keyof T): any\",children:\"simpleGroupBy\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in simpleGroupBy<T extends Record<PropertyKey, any>>(arr: T[], key: keyof T): any\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">>(\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in simpleGroupBy<T extends Record<PropertyKey, any>>(arr: T[], key: keyof T): any\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: keyof T\",children:\"key\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in simpleGroupBy<T extends Record<PropertyKey, any>>(arr: T[], key: keyof T): any\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.reduce<any>(callbackfn: (previousValue: any, currentValue: T, currentIndex: number, array: T[]) => any, initialValue: any): any (+2 overloads)\",children:\"reduce\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"((\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: any\",children:\"accumulator\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: keyof T\",children:\"key\"}),\"];\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"if\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"!\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: any\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"}),\"]) {\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"      \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: any\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"}),\"] \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [];\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    }\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"    \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: any\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"}),\"].\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"any\",children:\"push\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: any\",children:\"accumulator\"}),\";\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  }, {} \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"as\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var console: Console\",children:\"console\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Console.dir(item?: any, options?: any): void\",children:\"dir\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"(\"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function simpleGroupBy<Foo>(arr: Foo[], key: keyof Foo): any\",children:\"simpleGroupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"num\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"));\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  '1': [\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"    { num: 1, someLiteral: 'a', object: [Object] },\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"    { num: 1, someLiteral: 'b', object: {} }\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  ],\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  '2': [ { num: 2, someLiteral: 'a', object: [Object] } ]\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})})]})})]}),`\n`,(0,e.jsx)(l.p,{children:\"Cool the logic here seems to work, but obviously the types could use some love.\"}),`\n`,(0,e.jsxs)(l.p,{children:[`Let's start by adding a few more generics, so we can type the output correctly.\nYour first change might be to make the return type `,(0,e.jsx)(l.code,{children:\"Record<string, T[]>\"}),` since the keys will be coerced to strings by JavaScript and the values will be the same values in the array.\nThis will unfortunately make typescript sad.`]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"sadAttempt\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"object\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">(\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: keyof T\",children:\"key\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]> {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.reduce<Record<string, T[]>>(callbackfn: (previousValue: Record<string, T[]>, currentValue: T, currentIndex: number, array: T[]) => Record<string, T[]>, initialValue: Record<...>): Record<...> (+2 overloads)\",children:\"reduce\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"((\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<string, T[]>\",children:\"accumulator\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends object\",children:\"val\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends object\",children:\"val\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: keyof T\",children:\"key\"}),\"];\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"if\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"!\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsxs)(l[\"data-err\"],{children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<string, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"})]}),\"]) {\"]})]}),(0,e.jsxs)(l.span,{className:\"error\",children:[(0,e.jsx)(l.span,{children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsx)(l.span,{className:\"code\",children:\"2536\"})]}),(0,e.jsx)(l.span,{className:\"error-behind\",children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"      \",(0,e.jsxs)(l[\"data-err\"],{children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<string, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"})]}),\"] \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [];\"})]}),(0,e.jsxs)(l.span,{className:\"error\",children:[(0,e.jsx)(l.span,{children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsx)(l.span,{className:\"code\",children:\"2536\"})]}),(0,e.jsx)(l.span,{className:\"error-behind\",children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    }\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"    \",(0,e.jsxs)(l[\"data-err\"],{children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<string, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[keyof T]\",children:\"groupedKey\"})]}),\"].\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"any\",children:\"push\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends object\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.span,{className:\"error\",children:[(0,e.jsx)(l.span,{children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsx)(l.span,{className:\"code\",children:\"2536\"})]}),(0,e.jsx)(l.span,{className:\"error-behind\",children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T[]>'.\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<string, T[]>\",children:\"accumulator\"}),\";\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  }, {} \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"as\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in sadAttempt<T extends object>(arr: T[], key: keyof T): Record<string, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]>);\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"The lines with \",(0,e.jsx)(l.code,{children:\"accumulator[groupedKey]\"}),\" will error with \",(0,e.jsx)(l.code,{children:\"Type 'T[keyof T]' cannot be used to index type 'Record<string, T>'\"}),\". Here the \",(0,e.jsx)(l.code,{children:\"keyof T\"}),\" could be any key in \",(0,e.jsx)(l.code,{children:\"T\"}),\" so since not every key's value in \",(0,e.jsx)(l.code,{children:\"T\"}),\" is a string typescript will not let you treat \",(0,e.jsx)(l.code,{children:\"groupedKey\"}),\" as a string.\"]}),`\n`,(0,e.jsx)(l.p,{children:\"We can almost fix this by adding some more information on the input key by binding it to a new generic parameter, though there will still be some issues.\"}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"betterSadAttempt\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">, \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">(\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[],\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: Key extends keyof T\",children:\"key\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]> {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.reduce<Record<T[Key], T[]>>(callbackfn: (previousValue: Record<T[Key], T[]>, currentValue: T, currentIndex: number, array: T[]) => Record<T[Key], T[]>, initialValue: Record<...>): Record<...> (+2 overloads)\",children:\"reduce\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"((\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: Key extends keyof T\",children:\"key\"}),\"];\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"if\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"!\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"]) {\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"      \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"] \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [];\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    }\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"    \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"].\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.push(...items: T[]): number\",children:\"push\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\";\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  }, {} \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"as\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in betterSadAttempt<T extends Record<PropertyKey, any>, Key extends keyof T>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]>);\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"Here we added a new generic \",(0,e.jsx)(l.code,{children:\"Key extends keyof T\"}),\" so when we supply a specific key to the function, the Key generic will be narrowed to that value. For example if we did \",(0,e.jsx)(l.code,{children:\"betterSadAttempt(vals, 'someLiteral')\"}),\", \",(0,e.jsx)(l.code,{children:\"Key\"}),\" would exactly be \",(0,e.jsx)(l.code,{children:\"'someLiteral'\"}),\" instead of \",(0,e.jsx)(l.code,{children:\"keyof Foo = 'someLiteral' | 'num' | 'object'\"})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"However, typescript is still sad on the \",(0,e.jsx)(l.code,{children:\"Record<T[Key], T[]>\"}),\" lines with \",(0,e.jsx)(l.code,{children:\"Type 'T[Key]' does not satisfy the constraint 'string | number | symbol'\"}),`.\nThis error is similar to the error before, basically `,(0,e.jsx)(l.code,{children:\"T[Key]\"}),\" can not be a key for the \",(0,e.jsx)(l.code,{children:\"Record\"}),\" since it could be some weird value.\"]}),`\n`,(0,e.jsxs)(l.p,{children:[\"To accomplish this we need to make a helper type that filters down the allowed keys to only keys whose values are \",(0,e.jsx)(l.code,{children:\"string | number | symbol\"}),`.\nWe can use a `,(0,e.jsx)(l.a,{href:\"https://www.typescriptlang.org/docs/handbook/2/mapped-types.html\",children:\"mapped type\"}),\" to do just that\"]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  [\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"in\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"]\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"] \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"never\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"};\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">[\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"];\"})]})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"This type helper does a few things. First it maps over all the values in \",(0,e.jsx)(l.code,{children:\"T\"}),\" (\",(0,e.jsx)(l.code,{children:\"[K in keyof T]\"}),\") and makes the value the key if it is a subset of \",(0,e.jsx)(l.code,{children:\"string | number | symbol\"}),\" (\",(0,e.jsx)(l.code,{children:\"T[K] extends PropertyKey ? K\"}),\"), if it's not a subset its value will be the \",(0,e.jsx)(l.code,{children:\"never\"}),\" type. Finally, we use an \",(0,e.jsx)(l.a,{href:\"https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html\",children:\"index access type\"}),\" to get all values of the transformed object as a union. This step will drop all the \",(0,e.jsx)(l.code,{children:\"never\"}),\" values automatically for us since adding \",(0,e.jsx)(l.code,{children:\"never\"}),\" to a union is like saying \",(0,e.jsx)(l.code,{children:\"or false\"}),\" its basically is a no op.\"]}),`\n`,(0,e.jsx)(l.p,{children:\"That was a mouthful so let's see an example\"}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// from above\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Foo\",children:\"Foo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.num: number\",children:\"num\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"number\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'(property) Foo.someLiteral: \"a\" | \"b\" | \"c\"',children:\"someLiteral\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"a\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"|\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"b\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"|\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"c\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) Foo.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:`type MappedFoo = {\n    num: \"num\";\n    someLiteral: \"someLiteral\";\n    object: never;\n}`,children:\"MappedFoo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Foo\",children:\"Foo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'  num: \"num\";'})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'  someLiteral: \"someLiteral\";'})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  object: never;\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// we replace the values of this object with just the key as a string literal or never\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:'type FooKeys = \"num\" | \"someLiteral\"',children:\"FooKeys\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface Foo\",children:\"Foo\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'// => \"num\" | \"someLiteral\"'})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// notice the never does not show up in the union\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"interface\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface AllObjects\",children:\"AllObjects\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) AllObjects.object: Record<string, any>\",children:\"object\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"string\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"  \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(property) AllObjects.diffObject: Record<number, any>\",children:\"diffObject\"})]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"number\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:`type MappedAllObjects = {\n    object: never;\n    diffObject: never;\n}`,children:\"MappedAllObjects\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface AllObjects\",children:\"AllObjects\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"/*\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"{ \"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  object: never;\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"  diffObject: never;\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"*/\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type AllObjectsKeys = never\",children:\"AllObjectsKeys\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"interface AllObjects\",children:\"AllObjects\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// => never\"})}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'// the output is only never. Think of this like saying \"false or false\", the output will just be false'})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"With this filter type helper function we can now properly limit the \",(0,e.jsx)(l.code,{children:\"Key\"}),\" generic by replacing \",(0,e.jsx)(l.code,{children:\"Key extends keyof T\"}),\" with \",(0,e.jsx)(l.code,{children:\"Key extends Filter<T>\"}),\".\"]}),`\n`,(0,e.jsxs)(l.h2,{id:\"putting-it-all-together\",children:[(0,e.jsx)(l.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#putting-it-all-together\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Putting it all together\"]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  [\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"in\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"]\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type MapValuesToKeysIfAllowed<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"] \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) K\",children:\"K\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"never\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"};\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">[\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"];\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"groupBy\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"any\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">, \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">>(\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[],\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: Key extends Filter<T>\",children:\"key\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]> {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.reduce<Record<T[Key], T[]>>(callbackfn: (previousValue: Record<T[Key], T[]>, currentValue: T, currentIndex: number, array: T[]) => Record<T[Key], T[]>, initialValue: Record<...>): Record<...> (+2 overloads)\",children:\"reduce\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"((\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) key: Key extends Filter<T>\",children:\"key\"}),\"];\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"if\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"!\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"]) {\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"      \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"] \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [];\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    }\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"    \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: T[Key]\",children:\"groupedKey\"}),\"].\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.push(...items: T[]): number\",children:\"push\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T extends Record<PropertyKey, any>\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<T[Key], T[]>\",children:\"accumulator\"}),\";\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  }, {} \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"as\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Key in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"Key\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupBy<T extends Record<PropertyKey, any>, Key extends Filter<T>>(arr: T[], key: Key): Record<T[Key], T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]>);\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const nums: Record<number, Foo[]>\",children:\"nums\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:'function groupBy<Foo, \"num\">(arr: Foo[], key: \"num\"): Record<number, Foo[]>',children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"num\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// nums = Record<number, Foo[]>\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'const literals: Record<\"a\" | \"b\" | \"c\", Foo[]>',children:\"literals\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:'function groupBy<Foo, \"someLiteral\">(arr: Foo[], key: \"someLiteral\"): Record<\"a\" | \"b\" | \"c\", Foo[]>',children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"someLiteral\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:'// literals = Record<\"a\" | \"b\" | \"c\", Foo[]>'})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'const sad: Record<number | \"a\" | \"b\" | \"c\", Foo[]>',children:\"sad\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:'function groupBy<Foo, Filter<Foo>>(arr: Foo[], key: Filter<Foo>): Record<number | \"a\" | \"b\" | \"c\", Foo[]>',children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"object\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsxs)(l.span,{className:\"error\",children:[(0,e.jsx)(l.span,{children:`Argument of type '\"object\"' is not assignable to parameter of type 'Filter<Foo>'.`}),(0,e.jsx)(l.span,{className:\"code\",children:\"2345\"})]}),(0,e.jsx)(l.span,{className:\"error-behind\",children:`Argument of type '\"object\"' is not assignable to parameter of type 'Filter<Foo>'.`})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[`Now this works great, we can only pass in keys that have valid values, and we even get autocomplete on it! However, one thing that bothers me is the error message in the last case.\nWhile it's correct, saying `,(0,e.jsx)(l.code,{children:\"not assignable to parameter of type 'Filter<Foo>'\"}),\" is not very useful to a user. This pops up sometimes with typescript where it won't show the underlying type and instead just show the higher level type helper instead.\"]}),`\n`,(0,e.jsxs)(l.p,{children:[\"To make the error message show the valid keys we can use a modified version of \",(0,e.jsx)(l.a,{href:\"https://stackoverflow.com/a/57683652\",children:'this \"hack\"'}),\". Here instead of creating the \",(0,e.jsx)(l.code,{children:\"Expand\"}),\" type in the post, we can make our own \",(0,e.jsx)(l.code,{children:\"ValuesOf\"}),\" to replace the \",(0,e.jsx)(l.code,{children:\"[keyof T]\"}),\" at the end of \",(0,e.jsx)(l.code,{children:\"Filter\"})]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type ValuesOf<A> = A extends infer O ? A[keyof A] : never\",children:\"ValuesOf\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) A in type ValuesOf<A>\",children:\"A\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) A in type ValuesOf<A>\",children:\"A\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"infer\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) O\",children:\"O\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"?\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) A in type ValuesOf<A>\",children:\"A\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"keyof\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) A in type ValuesOf<A>\",children:\"A\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"] \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:\"never\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\";\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"type\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Filter<T> = MapValuesToKeysIfAllowed<T> extends infer O ? (O & MapValuesToKeysIfAllowed<T>)[keyof T | keyof O] : never\",children:\"Filter\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"> \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type ValuesOf<A> = A extends infer O ? A[keyof A] : never\",children:\"ValuesOf\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type MapValuesToKeysIfAllowed<T> = { [K in keyof T]: T[K] extends PropertyKey ? K : never; }\",children:\"MapValuesToKeysIfAllowed\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in type Filter<T>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">>;\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// was Filter<T> = MapValuesToKeysIfAllowed<T>[keyof T]\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:'const sad: Record<number | \"a\" | \"b\" | \"c\", Foo[]>',children:\"sad\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:'function groupBy<Foo, \"num\" | \"someLiteral\">(arr: Foo[], key: \"num\" | \"someLiteral\"): Record<number | \"a\" | \"b\" | \"c\", Foo[]>',children:\"groupBy\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const vals: Foo[]\",children:\"vals\"}),\", \"]}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F1FA8C\"},children:\"object\"}),(0,e.jsx)(l.span,{style:{color:\"#E9F284\"},children:\"'\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsxs)(l.span,{className:\"error\",children:[(0,e.jsx)(l.span,{children:`Argument of type '\"object\"' is not assignable to parameter of type '\"num\" | \"someLiteral\"'.`}),(0,e.jsx)(l.span,{className:\"code\",children:\"2345\"})]}),(0,e.jsx)(l.span,{className:\"error-behind\",children:`Argument of type '\"object\"' is not assignable to parameter of type '\"num\" | \"someLiteral\"'.`})]})})]}),`\n`,(0,e.jsx)(l.p,{children:\"Now we have type safety and good error messages!\"}),`\n`,(0,e.jsxs)(l.h2,{id:\"possible-improvements\",children:[(0,e.jsx)(l.a,{\"aria-hidden\":\"true\",tabIndex:\"-1\",href:\"#possible-improvements\",children:(0,e.jsx)(l.span,{className:\"icon icon-link\"})}),\"Possible improvements\"]}),`\n`,(0,e.jsxs)(l.p,{children:[\"One thing this \",(0,e.jsx)(l.code,{children:\"groupBy\"}),\" function lacks that the lodash \",(0,e.jsx)(l.code,{children:\"groupBy\"}),` gives is we do not allow you to pass a function instead of a key to group on.\nThe example in the lodash docs is`]}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:`(alias) namespace _\n(alias) const _: import(\"/home/runner/work/JRMurr.github.io/JRMurr.github.io/node_modules/@types/lodash/index.d.ts\").LoDashStatic\nimport _`,children:\"_\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) LoDashStatic.groupBy<number>(collection: _.List<number> | null | undefined, iteratee?: _.ValueIteratee<number> | undefined): _.Dictionary<number[]> (+1 overload)\",children:\"groupBy\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"([\"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"6.1\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"4.2\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"6.3\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var Math: Math\",children:\"Math\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\".\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Math.floor(x: number): number\",children:\"floor\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// { '4': [4.2], '6': [6.1, 6.3] }\"})})]})})]}),`\n`,(0,e.jsx)(l.p,{children:\"While this is not perfect this mostly works\"}),`\n`,(0,e.jsxs)(l.pre,{className:\"shiki dracula twoslash lsp\",style:{backgroundColor:\"#282A36\",color:\"#F8F8F2\"},children:[(0,e.jsx)(l.div,{className:\"language-id\",children:\"ts\"}),(0,e.jsx)(l.div,{className:\"code-container\",children:(0,e.jsxs)(l.code,{children:[(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"function\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"groupByFunc\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) RetType in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"RetType\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type PropertyKey = string | number | symbol\",children:\"PropertyKey\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\",\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// no longer need any requirements on T since the grouper can do w/e it wants\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Func in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"Func\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"extends\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arg: T\",children:\"arg\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) RetType in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"RetType\"})})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\">(\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[], \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) mapper: Func extends (arg: T) => RetType\",children:\"mapper\"})}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) Func in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"Func\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\")\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\":\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) RetType in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"RetType\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]> {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) arr: T[]\",children:\"arr\"}),\".\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.reduce<Record<RetType, T[]>>(callbackfn: (previousValue: Record<RetType, T[]>, currentValue: T, currentIndex: number, array: T[]) => Record<RetType, T[]>, initialValue: Record<...>): Record<...> (+2 overloads)\",children:\"reduce\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"((\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<RetType, T[]>\",children:\"accumulator\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T\",children:\"val\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\") \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=>\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" {\"})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: RetType extends PropertyKey\",children:\"groupedKey\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:`(parameter) mapper: Func\n(arg: T) => RetType`,children:\"mapper\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"if\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" (\"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"!\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<RetType, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: RetType extends PropertyKey\",children:\"groupedKey\"}),\"]) {\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"      \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<RetType, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: RetType extends PropertyKey\",children:\"groupedKey\"}),\"] \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" [];\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    }\"})}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"    \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<RetType, T[]>\",children:\"accumulator\"}),\"[\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const groupedKey: RetType extends PropertyKey\",children:\"groupedKey\"}),\"].\"]}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Array<T>.push(...items: T[]): number\",children:\"push\"})}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\"(\",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) val: T\",children:\"val\"}),\");\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"    \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"return\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(parameter) accumulator: Record<RetType, T[]>\",children:\"accumulator\"}),\";\"]})]}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"  }, {} \"}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"as\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"type Record<K extends string | number | symbol, T> = { [P in K]: T; }\",children:\"Record\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"<\"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) RetType in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"RetType\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#FFB86C\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(type parameter) T in groupByFunc<RetType extends PropertyKey, T, Func extends (arg: T) => RetType>(arr: T[], mapper: Func): Record<RetType, T[]>\",children:\"T\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"[]>);\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"}\"})}),(0,e.jsx)(l.div,{className:\"line\",children:\"\\xA0\"}),(0,e.jsxs)(l.div,{className:\"line\",children:[(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"const\"}),(0,e.jsxs)(l.span,{style:{color:\"#F8F8F2\"},children:[\" \",(0,e.jsx)(l[\"data-lsp\"],{lsp:\"const test: Record<PropertyKey, number[]>\",children:\"test\"}),\" \"]}),(0,e.jsx)(l.span,{style:{color:\"#FF79C6\"},children:\"=\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\" \"}),(0,e.jsx)(l.span,{style:{color:\"#50FA7B\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"function groupByFunc<PropertyKey, number, (x: number) => number>(arr: number[], mapper: (x: number) => number): Record<PropertyKey, number[]>\",children:\"groupByFunc\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"([\"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"6.1\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"4.2\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\", \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:\"6.3\"}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\"], \"}),(0,e.jsx)(l.span,{style:{color:\"#BD93F9\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"var Math: Math\",children:\"Math\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\".\"}),(0,e.jsx)(l.span,{style:{color:\"#8BE9FD\"},children:(0,e.jsx)(l[\"data-lsp\"],{lsp:\"(method) Math.floor(x: number): number\",children:\"floor\"})}),(0,e.jsx)(l.span,{style:{color:\"#F8F8F2\"},children:\");\"})]}),(0,e.jsx)(l.div,{className:\"line\",children:(0,e.jsx)(l.span,{style:{color:\"#6272A4\"},children:\"// test = Record<PropertyKey, Foo[]>\"})})]})})]}),`\n`,(0,e.jsxs)(l.p,{children:[\"This works by only letting you pass in functions that return \",(0,e.jsx)(l.code,{children:\"PropertyKey\"}),\", but typescript does not seem to narrow the types. In this case \",(0,e.jsx)(l.code,{children:\"test\"}),\" should be \",(0,e.jsx)(l.code,{children:\"Record<number, Foo[]>\"}),\" since TS \",(0,e.jsx)(l.em,{children:\"should\"}),\" infer the return type of the grouping function. If you know how to improve this function to make the return type narrow properly feel free to leave an issue/pr on my \",(0,e.jsx)(l.a,{href:\"https://github.com/JRMurr/JRMurr.github.io\",children:\"blog's GitHub\"}),\"!\"]})]})}}var b=g;function C(r,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return f;})();\n;return Component;","toc":[{"value":"Lodash's groupBy","url":"#lodashs-groupby","depth":2},{"value":"Making our own groupBy","url":"#making-our-own-groupby","depth":2},{"value":"Putting it all together","url":"#putting-it-all-together","depth":2},{"value":"Possible improvements","url":"#possible-improvements","depth":2}],"frontMatter":{"readingTime":{"text":"20 min read","minutes":19.06,"time":1143600,"words":3812},"slug":"type-safe-groupby-in-typescript","fileName":"type-safe-groupby-in-typescript.md","title":"Type Safe GroupBy In TypeScript","date":"2022-05-25T00:00:00.000Z","tags":["typescript","types","code","guide"],"draft":false,"summary":"Create a better groupBy function that only allows valid keys to be grouped on","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.215,"time":12900,"words":43},"slug":["default"],"fileName":"default.md","name":"John Murray","avatar":"/static/images/me.jpg","occupation":"Software Engineer","github":"https://github.com/JRMurr","twitter":"https://twitter.com/JRMurrCodes","mastodon":"https://hachyderm.io/@jrmurr","date":null}],"prev":{"title":"Rust Environment and Docker Build with Nix Flakes","date":"2022-05-19T00:00:00.000Z","tags":["rust","nix","docker"],"draft":false,"summary":"Reproducible dev environments and builds with Nix","images":[],"layout":"PostLayout","slug":"rust-enviorment-and-docker-build-with-nix-flakes"},"next":{"title":"Making a PR to Nixpkgs","date":"2022-08-02T03:43:05.229Z","tags":["nix","rust"],"draft":false,"summary":"My rough ramblings on how to contribute a small pr to Nixpkgs","images":[],"layout":"PostLayout","slug":"updating-a-package-in-nixpkgs"}},"__N_SSG":true}