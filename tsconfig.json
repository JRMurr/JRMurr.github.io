{
  "compilerOptions": {
    "incremental": true,
    "target": "ES6",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    // "composite": true, // MIGRATE TODO: disabled to get rid of errors in velite config, is this needed?
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "Bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "baseUrl": ".",
    "paths": {
      "@/components/*": ["components/*"],
      "@/content/*": ["content/*"],
      "@/layouts/*": ["layouts/*"],
      "@/css/*": ["css/*"],
      "@/utils/*": ["utils/*"],
      "@/velite/generated": ["./.velite"]
    },
    "plugins": [
      {
        "name": "next"
      }
    ],
    "strictNullChecks": true
  },
  "include": [
    "next-env.d.ts",
    "**/*.js",
    "**/*.mjs",
    "**/*.ts",
    "**/*.mts",
    "**/*.tsx",
    "**/*.json",
    ".velite",
    ".next/types/**/*.ts",
    "velite.config.ts"
  ],
  "exclude": ["node_modules"],
  "ts-node": {
    // It is faster to skip typechecking.
    // Remove if you want ts-node to do typechecking.
    "transpileOnly": true,

    "files": true,

    "compilerOptions": {
      "esModuleInterop": true,
      "module": "ESNext",
      "moduleResolution": "NodeNext"
      // compilerOptions specified here will override those declared below,
      // but *only* in ts-node.  Useful if you want ts-node and tsc to use
      // different options with a single tsconfig.json.
    }
  }
}
